name: Build & Deploy Server

on:
  workflow_call: {}

env:
  BUILD_TARGET: StandaloneLinux64

jobs:
    buildAndDeployServer:
      name: Build & deploy
      runs-on: ubuntu-latest
      steps:  
        
        # Checkouts the current repository
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 1
               
        # Caches the Library folder for faster builds
        - name: Cache
          uses: actions/cache@v3
          with:
            path: Library
            key: Library-${{ env.BUILD_TARGET }}
            restore-keys: Library-

        # Detects in which environemnt the build should be deployed
        - name: Detect environment
          id: detectEnvironment
          run: bash ${GITHUB_WORKSPACE}/.github/scripts/common/detect-environment.sh
          env:
            VERSION_NAME: ${{ github.ref_name }}
        
        # Builds the Linux server using a given license
        - name: Build
          uses: game-ci/unity-builder@v2
          env:
            UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            buildName: "${{ vars.SERVER_BUILD_NAME }}"
            targetPlatform: ${{ env.BUILD_TARGET }}
            versioning: Tag
            buildMethod: Digi.EditorTools.BuildScript.Build
            customParameters: -productType Server -environmentType ${{ steps.detectEnvironment.outputs.targetEnvironment }} -serverType Hosted

        # Builds & pushes a docker image with the server build to PlayFab's container registry
        - name: Build & push docker image 
          run: bash ${GITHUB_WORKSPACE}/.github/scripts/playfab/build-docker-image.sh
          env:
            BUILD_TARGET: ${{ env.BUILD_TARGET }}
            DOCKER_SERVER_URL: ${{ secrets.DOCKER_SERVER_URL }}
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
            TAG_NAME: ${{ github.ref_name }}
        
        # Creates a PlayFab release with the pushed image & updates the active build for the environment
        - name: Create & upload PlayFab build
          run: bash ${GITHUB_WORKSPACE}/.github/scripts/playfab/create-upload-build.sh
          env:
            SERVER_BUILD_NAME: ${{ vars.SERVER_BUILD_NAME }}
            PLAYFAB_BASE_URL: ${{ vars.PLAYFAB_BASE_URL }}
            PLAYFAB_SECRET_KEY: ${{ secrets.PLAYFAB_SECRET_KEY }}
            PLAYFAB_ALIAS_ID_DEVELOPMENT: ${{ vars.PLAYFAB_ALIAS_ID_DEVELOPMENT }}
            PLAYFAB_ALIAS_ID_STAGING: ${{ vars.PLAYFAB_ALIAS_ID_STAGING }}
            PLAYFAB_ALIAS_ID_PRODUCTION: ${{ vars.PLAYFAB_ALIAS_ID_PRODUCTION }}
            TARGET_ENVIRONMENT: ${{ steps.detectEnvironment.outputs.targetEnvironment }}
            IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
            VERSION_NAME: ${{ github.ref_name }}
