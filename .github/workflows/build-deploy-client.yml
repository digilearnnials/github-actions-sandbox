name: Build & Deploy Client

on:
  push:
    tags: "[0-9]+.[0-9]+.[0-9]"

env:
  BUILD_FULL_NAME: "${{ vars.CLIENT_BUILD_NAME }} ${{ github.ref_name }}"

jobs:
    buildAndDeployClient:
      name: Build client
      runs-on: ubuntu-latest
      steps:  
        
        - name: Checkout
          uses: actions/checkout@v2
        
        - name: Cache
          uses: actions/cache@v2
          with:
            path: Library
            key: Library-WebGL
            restore-keys: Library-WebGL
        
        - name: Build
          uses: game-ci/unity-builder@v2
          env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          with:
            buildName: "$BUILD_FULL_NAME"
            targetPlatform: WebGL
            versioning: Tag

        - name: Configure git
          run: |
              git config --global user.name "${{ vars.CI_COMMIT_AUTHOR}}"
              git config --global user.email "${{ vars.CI_COMMIT_EMAIL}}"

        - name: Clone repository
          run: |
              git clone "${{ secrets.REPOSITORY_URL }}" deployment

        - name: Reset branch
          run: |
              cd deployment
              latestCommitId=$(git rev-parse HEAD)
              if [ "$latestCommitId" != "${{ vars.HARD_RESET_COMMIT_ID }}" ]; 
              then
                git reset --hard ${{ vars.HARD_RESET_COMMIT_ID }}
                git push --force
              fi
        
        - name: Copy build
          run: |
              cp -R "build/WebGL/$BUILD_FULL_NAME" deployment
        
        - name: Deploy to repository
          run: |
              cd deployment
              git add .
              git commit -m "Version ${{ github.ref_name }}"
              git push

        - name: Zip build for release
          run: |
              cd deployment
              zip -r "$BUILD_FULL_NAME.zip" "$BUILD_FULL_NAME"
        
        - name: Upload release
          uses: xresloader/upload-to-github-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            file: "deployment/$BUILD_FULL_NAME.zip"
            tags: true
            draft: false
